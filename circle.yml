machine:
  environment:
    # We need to set this variable to let Anaconda take precedence
    PATH: "/home/ubuntu/miniconda/envs/circleenv/bin:/home/ubuntu/miniconda/bin:$PATH"
    MNE_DATA: "/home/ubuntu/mne_data"
    DISPLAY: ":99.0"

dependencies:
  cache_directories:
    - "/home/ubuntu/miniconda"
    - "/home/ubuntu/.mne"
    - "/home/ubuntu/mne_data"
    - "/home/ubuntu/mne-tools.github.io"
  # Various dependencies
  pre:
    # Get a running Python
    - cd ~;
    # Disable pyenv (no cleaner way provided by CircleCI as it prepends pyenv version to PATH)
    - rm -rf ~/.pyenv;
    - rm -rf ~/virtualenvs;
    # Get Anaconda and conda-based requirements
    - >
      if [ ! -d "/home/ubuntu/miniconda" ]; then
        echo "Setting up conda";
        wget -q http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O ~/miniconda.sh;
        chmod +x ~/miniconda.sh;
        ~/miniconda.sh -b -p /home/ubuntu/miniconda;
        conda update --yes --quiet conda;
        conda create -n circleenv --yes pip python=2.7 pip numpy scipy scikit-learn mayavi matplotlib sphinx pillow six IPython pandas;
        sed -i "s/ENABLE_USER_SITE = .*/ENABLE_USER_SITE = False/g" /home/ubuntu/miniconda/envs/circleenv/lib/python2.7/site.py;
      else
        echo "Conda already set up.";
      fi;
    - ls -al /home/ubuntu/miniconda;
    - ls -al /home/ubuntu/miniconda/bin;
    - echo $PATH;
    - which python;
    - which pip;
    - git clone https://github.com/sphinx-gallery/sphinx-gallery.git;
    - cd sphinx-gallery && pip install -r requirements.txt && python setup.py develop;
    - cd /home/ubuntu && git clone https://github.com/enthought/pyface.git && cd pyface && python setup.py develop;
    - pip install sphinx_bootstrap_theme PySurfer nilearn neo;
    - cd /home/ubuntu/mne-python && python setup.py develop;
    - mkdir -p ~/mne_data;
    - python -c "import mne; mne.datasets.sample.data_path(verbose=True);";
    - python -c "import mne; mne.datasets.testing.data_path(verbose=True);";
    - python -c "import mne; mne.datasets.spm_face.data_path(verbose=True);";
    - python -c "import mne; mne.datasets.somato.data_path(verbose=True);";
    - python -c "import mne; mne.datasets.brainstorm.bst_raw.data_path(verbose=True);" --accept-brainstorm-license;
    - python -c "from mne.datasets.megsim import load_data; load_data(condition='visual', data_format='single-trial', data_type='simulation'); load_data(condition='visual', data_format='raw', data_type='experimental'); load_data(condition='visual', data_format='evoked', data_type='simulation');" --update-dataset-path;
    #- python -c "import mne; mne.datasets.megsim.urls._load_all_data();" --update-dataset-path;
    - python -c "import mne; mne.datasets.eegbci.data_path('http://www.physionet.org/physiobank/database/eegmmidb/S001/S001R06.edf', update_path=True, verbose=True);";
    - python -c "import mne; mne.sys_info()";
    - python -c "import mne, os; print(mne.datasets.sample.data_path(os.path.join(os.environ['HOME'], 'mne_data'), verbose=True))";
    - >
      if [ ! -d "/home/ubuntu/mne-tools.github.io" ]; then
        cd .. && git clone https://github.com/mne-tools/mne-tools.github.io.git && cd mne-tools.github.io && git checkout production;
      else
        cd /home/ubuntu/mne-tools.github.io && git checkout production;
      fi;
    - /sbin/start-stop-daemon --start --quiet --pidfile /tmp/custom_xvfb_99.pid --make-pidfile --background --exec /usr/bin/Xvfb -- :99 -screen 0 1400x900x24 -ac +extension GLX +render -noreset;
    - git config --global user.email "circle@mne.com"
    - git config --global user.name "Circle Ci"

test:
  override:
    #- cd doc && make html_dev:
    #     timeout: 1500
    #- cd ../mne-tools.github.io && mkdir html
    #- case $CIRCLE_NODE_INDEX in 0) cd doc && make html_dev-pattern PATTERN='/tutorials/plot_' ;; 1) cd doc && make html_dev-pattern PATTERN='/examples/plot_\|/connectivity/plot_\|/datasets/plot_\|/decoding/plot_\|/forward/plot_\|/inverse/plot_\|/io/plot_\|/preprocessing/plot_\|/realtime/plot_\|/simulation/plot_\|/stats/plot_\|/time_frequency/plot_\|/visualization/plot_' ;; esac:
    #- case $CIRCLE_NODE_INDEX in 0) cd doc && make html_dev-pattern PATTERN='/examples/plot_' ;; 1) cd doc && make html_dev-pattern PATTERN='/io/plot_';; esac:
    - case $CIRCLE_NODE_INDEX in 0) cd doc && make html_dev-pattern PATTERN='/tutorials/plot_' ;; 1) cd doc && make html_dev-pattern PATTERN='/examples/plot_\|/connectivity/plot_\|/datasets/plot_\|/decoding/plot_\|/forward/plot_\|/inverse/plot_\|/io/plot_\|/preprocessing/plot_\|/realtime/plot_\|/simulation/plot_\|/stats/plot_\|/time_frequency/plot_\|/visualization/plot_' && cd ../../mne-tools.github.io && mkdir html && cd html && cp -rf ../../mne-python/doc/_build/html/auto_examples . ;; esac:
        timeout: 1500
        parallel: true
    - cd ~/mne-tools.github.io && git checkout production && git pull origin production
    - case $CIRCLE_NODE_INDEX in 0) cd doc/_build && cp -rf html ~/mne-tools.github.io && cd ~/mne-tools.github.io && git add -A && git commit -m 'Update dev docs.' && git push origin production ;; 1) cd doc/_build/html && cp -rf auto_examples ~/mne-tools.github.io/html && cd _images && cp * ~/mne-tools.github.io/html/_images && cd ~/mne-tools.github.io && git add auto_examples/* images/* && git commit -m 'Update dev docs.' && git push origin production;; esac


general:
  # Open the doc to the API
  artifacts:
    - "doc/_build/html"
